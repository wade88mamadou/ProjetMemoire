#!/usr/bin/env python
"""
Script pour ajouter les nouvelles alertes de s√©curit√© √† l'ancien syst√®me
Ajoute les alertes manquantes : acc√®s non autoris√©, fuite de donn√©es, etc.
"""

import os
import sys
import django
from django.utils import timezone

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend_project.settings')
django.setup()

from api.models import RegleConformite, ParametreConformite, TypeAlerteConformite, RegleAlerteConformite

def ajouter_alertes_securite():
    """Ajoute les nouvelles alertes de s√©curit√© √† l'ancien syst√®me"""
    
    print("üîí AJOUT DES NOUVELLES ALERTES DE S√âCURIT√â")
    print("=" * 50)
    
    # 1. Cr√©er les nouveaux types d'alertes de s√©curit√©
    types_alertes_securite = [
        {
            'code': 'ACCES_NON_AUTORISE',
            'nom': 'Acc√®s non autoris√©',
            'description': 'D√©tection d\'un acc√®s non autoris√© au syst√®me ou aux donn√©es m√©dicales',
            'norme_conformite': 'GENERAL',
            'niveau_critique': 4,
            'delai_notification': 1
        },
        {
            'code': 'FUITES_DONNEES',
            'nom': 'Fuite de donn√©es',
            'description': 'D√©tection d\'une possible fuite de donn√©es m√©dicales sensibles',
            'norme_conformite': 'RGPD',
            'niveau_critique': 5,
            'delai_notification': 1
        },
        {
            'code': 'TENTATIVE_INTRUSION',
            'nom': 'Tentative d\'intrusion',
            'description': 'D√©tection de tentatives d\'intrusion dans le syst√®me',
            'norme_conformite': 'GENERAL',
            'niveau_critique': 4,
            'delai_notification': 2
        },
        {
            'code': 'EXPORT_NON_AUTORISE',
            'nom': 'Export non autoris√©',
            'description': 'Tentative d\'export de donn√©es sans autorisation',
            'norme_conformite': 'RGPD',
            'niveau_critique': 4,
            'delai_notification': 2
        },
        {
            'code': 'MODIFICATION_CRITIQUE',
            'nom': 'Modification critique non autoris√©e',
            'description': 'Modification de donn√©es critiques sans autorisation',
            'norme_conformite': 'HIPAA',
            'niveau_critique': 4,
            'delai_notification': 2
        },
        {
            'code': 'SUPPRESSION_MASSE',
            'nom': 'Suppression en masse',
            'description': 'Suppression de multiples dossiers m√©dicaux',
            'norme_conformite': 'HIPAA',
            'niveau_critique': 5,
            'delai_notification': 1
        },
        {
            'code': 'CONNEXION_SUSPICIEUSE',
            'nom': 'Connexion suspecte',
            'description': 'Connexion depuis une adresse IP ou un appareil suspect',
            'norme_conformite': 'GENERAL',
            'niveau_critique': 3,
            'delai_notification': 6
        },
        {
            'code': 'VIOLATION_SECRET_MEDICAL',
            'nom': 'Violation du secret m√©dical',
            'description': 'Partage non autoris√© d\'informations m√©dicales',
            'norme_conformite': 'CDP',
            'niveau_critique': 5,
            'delai_notification': 1
        },
        {
            'code': 'ACCES_HORS_HORAIRE',
            'nom': 'Acc√®s hors horaires',
            'description': 'Acc√®s au syst√®me en dehors des horaires de travail',
            'norme_conformite': 'GENERAL',
            'niveau_critique': 2,
            'delai_notification': 12
        },
        {
            'code': 'MULTIPLE_ECHECS_CONNEXION',
            'nom': 'Multiples √©checs de connexion',
            'description': 'Plusieurs tentatives de connexion √©chou√©es',
            'norme_conformite': 'GENERAL',
            'niveau_critique': 3,
            'delai_notification': 6
        }
    ]
    
    print("1Ô∏è‚É£ Cr√©ation des types d'alertes de s√©curit√©...")
    types_crees = 0
    
    for type_alerte in types_alertes_securite:
        try:
            type_obj, created = TypeAlerteConformite.objects.get_or_create(
                code=type_alerte['code'],
                defaults=type_alerte
            )
            if created:
                print(f"   ‚úÖ Cr√©√©: {type_alerte['nom']}")
                types_crees += 1
            else:
                print(f"   ‚ö†Ô∏è  Existant: {type_alerte['nom']}")
        except Exception as e:
            print(f"   ‚ùå Erreur: {type_alerte['nom']} - {e}")
    
    print(f"   üìä {types_crees} nouveaux types cr√©√©s")
    
    # 2. Cr√©er les r√®gles d'alertes de s√©curit√©
    regles_securite = [
        {
            'nom': 'Surveillance acc√®s non autoris√©s',
            'description': 'D√©tecte les tentatives d\'acc√®s non autoris√© au syst√®me',
            'type_alerte_code': 'ACCES_NON_AUTORISE',
            'seuil_min': 1,
            'seuil_max': None,
            'periode_surveillance': 1,
            'action_automatique': 'BLOQUER_ACCES',
            'notifier_admin': True,
            'notifier_dpo': True,
            'notifier_cdp': False
        },
        {
            'nom': 'Surveillance fuites de donn√©es',
            'description': 'D√©tecte les possibles fuites de donn√©es m√©dicales',
            'type_alerte_code': 'FUITES_DONNEES',
            'seuil_min': 1,
            'seuil_max': None,
            'periode_surveillance': 1,
            'action_automatique': 'ESCALADER',
            'notifier_admin': True,
            'notifier_dpo': True,
            'notifier_cdp': True
        },
        {
            'nom': 'Surveillance tentatives d\'intrusion',
            'description': 'D√©tecte les tentatives d\'intrusion dans le syst√®me',
            'type_alerte_code': 'TENTATIVE_INTRUSION',
            'seuil_min': 3,
            'seuil_max': None,
            'periode_surveillance': 1,
            'action_automatique': 'BLOQUER_ACCES',
            'notifier_admin': True,
            'notifier_dpo': False,
            'notifier_cdp': False
        },
        {
            'nom': 'Surveillance exports non autoris√©s',
            'description': 'D√©tecte les tentatives d\'export sans autorisation',
            'type_alerte_code': 'EXPORT_NON_AUTORISE',
            'seuil_min': 1,
            'seuil_max': None,
            'periode_surveillance': 1,
            'action_automatique': 'BLOQUER_ACCES',
            'notifier_admin': True,
            'notifier_dpo': True,
            'notifier_cdp': False
        },
        {
            'nom': 'Surveillance modifications critiques',
            'description': 'D√©tecte les modifications de donn√©es critiques',
            'type_alerte_code': 'MODIFICATION_CRITIQUE',
            'seuil_min': 1,
            'seuil_max': None,
            'periode_surveillance': 1,
            'action_automatique': 'LOGGER',
            'notifier_admin': True,
            'notifier_dpo': True,
            'notifier_cdp': False
        },
        {
            'nom': 'Surveillance suppressions en masse',
            'description': 'D√©tecte les suppressions de multiples dossiers',
            'type_alerte_code': 'SUPPRESSION_MASSE',
            'seuil_min': 5,
            'seuil_max': None,
            'periode_surveillance': 1,
            'action_automatique': 'BLOQUER_ACCES',
            'notifier_admin': True,
            'notifier_dpo': True,
            'notifier_cdp': True
        },
        {
            'nom': 'Surveillance connexions suspectes',
            'description': 'D√©tecte les connexions depuis des sources suspectes',
            'type_alerte_code': 'CONNEXION_SUSPICIEUSE',
            'seuil_min': 1,
            'seuil_max': None,
            'periode_surveillance': 6,
            'action_automatique': 'NOTIFICATION',
            'notifier_admin': True,
            'notifier_dpo': False,
            'notifier_cdp': False
        },
        {
            'nom': 'Surveillance violations secret m√©dical',
            'description': 'D√©tecte les violations du secret m√©dical',
            'type_alerte_code': 'VIOLATION_SECRET_MEDICAL',
            'seuil_min': 1,
            'seuil_max': None,
            'periode_surveillance': 1,
            'action_automatique': 'ESCALADER',
            'notifier_admin': True,
            'notifier_dpo': True,
            'notifier_cdp': True
        },
        {
            'nom': 'Surveillance acc√®s hors horaires',
            'description': 'D√©tecte les acc√®s en dehors des horaires normaux',
            'type_alerte_code': 'ACCES_HORS_HORAIRE',
            'seuil_min': 1,
            'seuil_max': None,
            'periode_surveillance': 12,
            'action_automatique': 'NOTIFICATION',
            'notifier_admin': True,
            'notifier_dpo': False,
            'notifier_cdp': False
        },
        {
            'nom': 'Surveillance √©checs de connexion',
            'description': 'D√©tecte les multiples √©checs de connexion',
            'type_alerte_code': 'MULTIPLE_ECHECS_CONNEXION',
            'seuil_min': 5,
            'seuil_max': None,
            'periode_surveillance': 1,
            'action_automatique': 'BLOQUER_ACCES',
            'notifier_admin': True,
            'notifier_dpo': False,
            'notifier_cdp': False
        }
    ]
    
    print("\n2Ô∏è‚É£ Cr√©ation des r√®gles d'alertes de s√©curit√©...")
    regles_crees = 0
    
    for regle in regles_securite:
        try:
            # R√©cup√©rer le type d'alerte
            type_alerte = TypeAlerteConformite.objects.get(code=regle['type_alerte_code'])
            
            regle_obj, created = RegleAlerteConformite.objects.get_or_create(
                nom=regle['nom'],
                defaults={
                    'description': regle['description'],
                    'type_alerte': type_alerte,
                    'conditions': {'type': 'seuil', 'valeur': regle['seuil_min']},
                    'seuil_min': regle['seuil_min'],
                    'seuil_max': regle['seuil_max'],
                    'periode_surveillance': regle['periode_surveillance'],
                    'action_automatique': regle['action_automatique'],
                    'notifier_admin': regle['notifier_admin'],
                    'notifier_dpo': regle['notifier_dpo'],
                    'notifier_cdp': regle['notifier_cdp'],
                    'is_active': True
                }
            )
            if created:
                print(f"   ‚úÖ Cr√©√©e: {regle['nom']}")
                regles_crees += 1
            else:
                print(f"   ‚ö†Ô∏è  Existante: {regle['nom']}")
        except Exception as e:
            print(f"   ‚ùå Erreur: {regle['nom']} - {e}")
    
    print(f"   üìä {regles_crees} nouvelles r√®gles cr√©√©es")
    
    # 3. Ajouter les nouvelles r√®gles √† l'ancien syst√®me RegleConformite
    print("\n3Ô∏è‚É£ Ajout des r√®gles √† l'ancien syst√®me...")
    anciennes_regles_crees = 0
    
    anciennes_regles = [
        {
            'nomRegle': 'Surveillance acc√®s non autoris√©s',
            'description': 'D√©tecte les tentatives d\'acc√®s non autoris√© au syst√®me m√©dical',
            'typeRegle': 'SECURITE_ACCES',
            'niveauCritique': 4
        },
        {
            'nomRegle': 'Surveillance fuites de donn√©es',
            'description': 'D√©tecte les possibles fuites de donn√©es m√©dicales sensibles',
            'typeRegle': 'SECURITE_DONNEES',
            'niveauCritique': 5
        },
        {
            'nomRegle': 'Surveillance tentatives d\'intrusion',
            'description': 'D√©tecte les tentatives d\'intrusion dans le syst√®me m√©dical',
            'typeRegle': 'SECURITE_INTRUSION',
            'niveauCritique': 4
        },
        {
            'nomRegle': 'Surveillance exports non autoris√©s',
            'description': 'D√©tecte les tentatives d\'export de donn√©es sans autorisation',
            'typeRegle': 'SECURITE_EXPORT',
            'niveauCritique': 4
        },
        {
            'nomRegle': 'Surveillance modifications critiques',
            'description': 'D√©tecte les modifications de donn√©es m√©dicales critiques',
            'typeRegle': 'SECURITE_MODIFICATION',
            'niveauCritique': 4
        },
        {
            'nomRegle': 'Surveillance suppressions en masse',
            'description': 'D√©tecte les suppressions de multiples dossiers m√©dicaux',
            'typeRegle': 'SECURITE_SUPPRESSION',
            'niveauCritique': 5
        },
        {
            'nomRegle': 'Surveillance connexions suspectes',
            'description': 'D√©tecte les connexions depuis des sources suspectes',
            'typeRegle': 'SECURITE_CONNEXION',
            'niveauCritique': 3
        },
        {
            'nomRegle': 'Surveillance violations secret m√©dical',
            'description': 'D√©tecte les violations du secret m√©dical',
            'typeRegle': 'SECURITE_SECRET',
            'niveauCritique': 5
        },
        {
            'nomRegle': 'Surveillance acc√®s hors horaires',
            'description': 'D√©tecte les acc√®s en dehors des horaires de travail',
            'typeRegle': 'SECURITE_HORAIRE',
            'niveauCritique': 2
        },
        {
            'nomRegle': 'Surveillance √©checs de connexion',
            'description': 'D√©tecte les multiples √©checs de connexion',
            'typeRegle': 'SECURITE_ECHEC',
            'niveauCritique': 3
        }
    ]
    
    for regle in anciennes_regles:
        try:
            regle_obj, created = RegleConformite.objects.get_or_create(
                nomRegle=regle['nomRegle'],
                defaults=regle
            )
            if created:
                print(f"   ‚úÖ Cr√©√©e: {regle['nomRegle']}")
                anciennes_regles_crees += 1
            else:
                print(f"   ‚ö†Ô∏è  Existante: {regle['nomRegle']}")
        except Exception as e:
            print(f"   ‚ùå Erreur: {regle['nomRegle']} - {e}")
    
    print(f"   üìä {anciennes_regles_crees} anciennes r√®gles cr√©√©es")
    
    # 4. Statistiques finales
    print("\n" + "=" * 50)
    print("üìä R√âSUM√â DE L'AJOUT DES ALERTES DE S√âCURIT√â")
    print("=" * 50)
    print(f"   ‚Ä¢ Types d'alertes cr√©√©s: {types_crees}")
    print(f"   ‚Ä¢ R√®gles modernes cr√©√©es: {regles_crees}")
    print(f"   ‚Ä¢ R√®gles anciennes cr√©√©es: {anciennes_regles_crees}")
    print(f"   ‚Ä¢ Total: {types_crees + regles_crees + anciennes_regles_crees} √©l√©ments")
    
    print("\nüéØ NOUVELLES ALERTES DE S√âCURIT√â AJOUT√âES:")
    print("   üîí Acc√®s non autoris√©")
    print("   üíß Fuite de donn√©es")
    print("   üö™ Tentative d'intrusion")
    print("   üì§ Export non autoris√©")
    print("   ‚úèÔ∏è  Modification critique")
    print("   üóëÔ∏è  Suppression en masse")
    print("   üîç Connexion suspecte")
    print("   ü§ê Violation secret m√©dical")
    print("   ‚è∞ Acc√®s hors horaires")
    print("   ‚ùå Multiples √©checs de connexion")
    
    print("\n‚úÖ SYST√àME D'ALERTES DE S√âCURIT√â COMPL√âT√â !")
    print("\nüìù PROCHAINES √âTAPES:")
    print("   1. Red√©marrer le serveur backend")
    print("   2. Acc√©der √† l'interface de configuration")
    print("   3. Configurer les seuils sp√©cifiques")
    print("   4. Tester les nouvelles alertes")

if __name__ == '__main__':
    ajouter_alertes_securite() 